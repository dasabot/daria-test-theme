{% comment %}
  Renders a product card

  Accepts:
  - card_product: {Object} Product Liquid object (optional)

  Usage:
  {% render 'card-product' %}
{% endcomment %}

{{ 'output.css' | asset_url | stylesheet_tag }}

{% assign color_option_index = 0 %}
{% for option in card_product.options_with_values %}
  {% if option.name == 'Color' %}
    {% assign color_option_index = forloop.index0 %}
  {% endif %}
{% endfor %}

<div id="{{ card_product.handle }}-product-card" class="w-[315px] h-[452px] flex flex-col relative gap-[15px]">
  <div
    id="{{ card_product.handle }}-badge"
    class="absolute top-[20px] left-[20px] border-red-500 bg-white border rounded-[25.61px] px-[12.8px] py-[6.4px]"
  >
    <span class="text-red-500 franklinGothicFont text-[15px] font-medium">On sale!</span>
  </div>

  <a
    id="{{ card_product.handle }}-product-link"
    href="/products/{{ card_product.handle }}"
    class="flex items-center justify-center h-[340px] w-[315px] px-[20px] py-[20px] border rounded-[10px] bg-center bg-contain border-[#f8f8f8]"
    aria-label="Navigate to the {{ card_product.title }}"
  >
    {% assign initial_variant = card_product.variants[0] %}
    {% assign initial_main_image = initial_variant.metafields.custom.main_image | image_url %}
    {% assign initial_hover_image = initial_variant.metafields.custom.hover_image | image_url %}

    <img
      id="{{ card_product.handle }}-product-image"
      src="{{ initial_main_image | image_url }}"
      data-main="{{ initial_main_image }}"
      data-hover="{{ initial_hover_image }}"
      alt="{{ initial_variant.title | escape }}"
      class="h-[301px] w-auto object-contain"
      loading="lazy"
      width="auto"
      height="301"
    >
  </a>

  <div class="flex gap-[5px]">
    {% assign colors = '' %}
    {% for variant in card_product.variants %}
      {% assign color = variant.options[color_option_index] %}
      {% unless colors contains color %}
        {% assign colors = colors | append: color | append: ',' %}

        <button
          id="{{ variant.id }}-variant"
          class="option w-[24px] h-[24px] flex items-center justify-center rounded-full cursor-pointer"
          onclick="selectVariant('{{ card_product.handle }}', '{{ variant.id }}', '{{ variant.metafields.custom.main_image | image_url }}', '{{ variant.metafields.custom.hover_image | image_url }}')"
          title="{{ variant.title }}"
          data-is-selected="{% if variant.id == card_product.variants[0].id %}true{% else %}false{% endif %}"
          data-variant-id="{{ variant.id }}"
          aria-label="Select {{ variant.title }}"
        >
          <div
            class="w-[20px] h-[20px] rounded-full"
            style="background-color: {{ variant.metafields.custom.color_hex | default: '#fff' }};"
          ></div>
        </button>
      {% endunless %}
    {% endfor %}
  </div>
  <div class="flex flex-col gap-[6px]">
    <span class="block text-gray-900 leading-[14px]">{{ card_product.metafields.custom.brand }}</span>
    <a
      href="/products/{{ card_product.handle }}"
      class="block font-medium text-[16px] leading-[18px] text-[rgba(10,72,116,1)]"
      aria-label="Navigate to the {{ card_product.title }}"
    >
      {{- card_product.title -}}
    </a>
    <div class="flex gap-[8px]">
      <span id="{{card_product.handle}}-compare-price" class="line-through leading-[16px] text-gray-900">
        {{- card_product.variants[0].compare_at_price | money }}
      </span>
      <span id="{{card_product.handle}}-price" class="text-red-600 leading-[16px]">
        {{- card_product.variants[0].price | money -}}
      </span>
    </div>
  </div>
</div>

<script src="{{ 'card-product.js' | asset_url }}" defer="defer"></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const productHandle = '{{ card_product.handle }}';
    const selectedVariantId = {{ card_product.selected_or_first_available_variant.id }};
    const productCard = document.getElementById(`${productHandle}-product-card`);
  
    if (!productCard) return;
    
    const swatchButtons = productCard.querySelectorAll(`button.option`);
    const productLink = productCard.querySelector(`#${productHandle}-product-link`);
    const productImage = productCard.querySelector(`#${productHandle}-product-image`);

    swatchButtons.forEach((button) => {
      const variantId = button.getAttribute('data-variant-id');
      
      if (variantId == selectedVariantId) {
        button.classList.add('active-swatch');
      } else {
        button.classList.remove('active-swatch');
      }
    });

    if (productLink && productImage) {
      productLink.addEventListener('mouseover', () => {
        const hoverSrc = productImage.getAttribute('data-hover');
        if (hoverSrc) productImage.src = hoverSrc;
      });
  
      productLink.addEventListener('mouseout', () => {
        const mainSrc = productImage.getAttribute('data-main');
        if (mainSrc) productImage.src = mainSrc;
      });
    }
  });
</script>
